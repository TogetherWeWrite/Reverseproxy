worker_processes                auto;
worker_rlimit_core              500M;

events {
    accept_mutex                off;
    worker_connections          1024;
    multi_accept                on;
    use                         epoll;
}


http {
    # --- Buffer Overflow Prevention
    client_body_buffer_size     10k;
    client_header_buffer_size   1k;
    client_max_body_size        8m;
    large_client_header_buffers 4 32k;

    access_log                  off;
    error_log                   /etc/nginx/error_log.log warn;
    proxy_cache_path            /etc/nginx/cache keys_zone=one:500m max_size=1000m;

 # --- Performance Boosting
    # Copies data between file directories from within the kernel (Faster than read() + write())
    sendfile                    on;
    # Send headers in one piece rather than one by one
    tcp_nopush                  on;
    # No buffering data
    tcp_nodelay                 on;

    # --- DDOS Protection
    limit_req_zone              $binary_remote_addr zone=req_limit_per_ip:10m rate=2r/s;
    limit_conn_zone             $binary_remote_addr zone=conn_limit_per_ip:10m;

    # --- Timeout
    reset_timedout_connection   on;
    client_body_timeout         10; # default 60
    send_timeout                5; # default 60
    keepalive_timeout           30; # default 75

    include security.conf;


    server {
        listen 80 default_server;
        listen [::]:80 default_server;        
        server_name _;
        return 301 https://$host$request_uri;
    }

    
   #404 reroute
    server {
      listen 443 ssl http2;
      server_name stijnbaltessen.digital;

      location / {
        return 404;
      }
  }

    #react server
    server {
    listen       443 ssl http2;
    server_name  react.stijnbaltessen.digital;
    
    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      proxy_pass      http://172.17.0.1:10203;
      proxy_redirect     http://172.17.0.1:10203/ https://react.stijnbaltessen.digital/;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_set_header    X-Forwarded-Host    $host;
      proxy_set_header    X-Forwarded-Port    $server_port;
    }
}
  #react server
      server {
      listen       443 ssl http2;
      server_name  jenkins.stijnbaltessen.digital;
    
      # pass requests for dynamic content to rails/turbogears/zope, et al
      location / {
        proxy_pass      http://172.17.0.1:8080;
        proxy_redirect     http://172.17.0.1:8080/ https://jenkins.stijnbaltessen.digital/;
        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    X-Forwarded-Host    $host;
        proxy_set_header    X-Forwarded-Port    $server_port;
      }
  }



    #test api
    server {
    listen       443 ssl http2;
    server_name  testapi.stijnbaltessen.digital;
    
    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      proxy_pass      http://172.17.0.1:10204;
      proxy_redirect     http://172.17.0.1:8080/ https://testapi.stijnbaltessen.digital/;
    }
}

#testing kubernetes nginx
    server {
    listen       80;
    server_name  nginxcicd.testing.stijnbaltessen.digital;
    
    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      proxy_pass      http://172.17.0.1:9376;
      #proxy_redirect     http://172.17.0.1:8080/ https://testapi.stijnbaltessen.digital/;
    }
}
}